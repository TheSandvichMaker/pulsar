#ifndef PULSAR_CODE_GENERATOR_H
#define PULSAR_CODE_GENERATOR_H

enum MetaType; // @Note: Generated by pulsar_code_generator.cpp

// @TODO: Generate these too?
enum MemberDefinitionFlag {
    MetaMemberFlag_IsPointer = 0x1,
};

struct MemberDefinition {
    unsigned int flags;
    MetaType type;

    unsigned int name_length;
    char* name;

    unsigned int offset;
    unsigned int size;
};

#ifndef introspect
// @Note: introspect() is used to instruct the code generator to generate code for the given enum / struct
#define introspect(...)
#endif

// @Note: These macros are for using code generated by the code generator
#define enum_name(type, value) GetEnumNameOf_##type(value)
#define enum_name_safe(type, value) (enum_name(type, value) ? enum_name(type, value) : "Unknown " #type)
#define enum_flag_name(type, value_ptr, name_ptr) GetNextEnumFlagNameOf_##type(value_ptr, name_ptr)

#define using_struct(type, as) union { type as; struct { BodyOf_##type }; };

#define meta_type(type) MetaType_##type
#define meta_type_name(meta_type) GetMetaTypeName(meta_type)

#define members_of(type) MembersOf_##type
#define members_count(type) ARRAY_COUNT(MembersOf_##type)
#define member_ptr(source, member_definition) cast(void**) (cast(u8*) (source) + (member_definition)->offset)

#endif /* PULSAR_CODE_GENERATOR_H */
